# -*- coding: utf-8 -*-
"""Spam_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HpEqASszdzotZ7DkuIggokpJ-9J1w3rk
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

ds=pd.read_csv("/content/mail_data.csv")

ds.head()

ds.info()

ds.describe()

ds.isnull().sum() #that shows no null value in data set

#LABEL ENCODING for category column

ds["Category"].unique()

ds.loc[ds["Category"]=="spam","Category",]=0
ds.loc[ds["Category"]=="ham","Category",]=1

ds["Category"].dtypes #that is object type we need to change it

#Seprating category and messages for traing and testing

x=ds["Message"]
y=ds["Category"]

X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.2,random_state=3)

#changing Categotry column to integer type from object type
Y_train=Y_train.astype("int")
Y_test=Y_test.astype("int")

print(X_train.shape)
print(X_test.shape)
#if we add both we will get 5572 that shows our training and testing divided properly

#Feature extraction
fe=TfidfVectorizer(min_df=1,stop_words="english",lowercase="True")

X_train_fea=fe.fit_transform(X_train)
X_test_fea=fe.transform(X_test)

#Logistic regression
lr=LogisticRegression()

lr.fit(X_train_fea,Y_train)

# Evaluating lr model

predict_train_data=lr.predict(X_train_fea)
accuracy_train_data=accuracy_score(Y_train,predict_train_data)

predict_test_data=lr.predict(X_test_fea)
accuracy_test_data=accuracy_score(Y_test,predict_test_data)

#comparing test and traing to avoid under or over fitting
print("Accuracy on traing data : ",accuracy_train_data)
print("Accuracy on traing data : ",accuracy_test_data)

mail=["I HAVE A DATE ON SUNDAY WITH WILL!!"]
mail_data_fea=fe.transform(mail)

#prediction
prediction=lr.predict(mail_data_fea)
print(prediction)

# as in above model predicted 1 that means it is ham (not a spam)



